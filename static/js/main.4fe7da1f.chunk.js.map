{"version":3,"sources":["Message.js","Firebase.js","features/userSlice.js","features/chatSlice.js","utils.js","BottomSheet/BottomSheet.js","BottomSheet/BottomSheetMenu.js","BottomSheet/ChatDetailsBS.js","BottomSheet/Modal.js","Chat.js","SidebarChat.js","BottomSheet/NewChatBS.js","Sidebar.js","Imessage.js","images/imessage-logo.png","Login.js","App.js","app/store.js","index.js","BottomSheet/BottomSheet.module.css","BottomSheet/EditChatBS.module.css","BottomSheet/NewChatBS.module.css"],"names":["Message","forwardRef","ref","content","creationTime","authorPhoto","authorName","incomming","authorUid","rest","className","Avatar","src","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","provider","GoogleAuthProvider","userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","chatSlice","open","id","testData","openChatAction","lastAvatar","lastEdit","lastName","creatorUid","updateChatAction","closeChatAction","selectChat","chat","transformUnknownDateFormat","date","moment","handlePLDateString","Date","toDate","transformMomentToString","format","defaultStyle","backgroundColor","borderRadius","overflow","width","display","justifyContent","marginTop","marginLeft","marginRight","height","opacity","BottomSheet","React","handleClose","children","useRef","useState","setBottomSheetOpen","useEffect","style","styles","Container","onClick","Top","Content","MenuHeader","props","MenuGroup","MenuGroupButton","disable","MenuGroupElement","Left","type","Right","ChatDetails","innerRef","deeperRef","newName","setNewName","useSelector","dispatch","useDispatch","tooShort","setTooShort","length","inputRef","useCallback","node","focus","uid","isMyChat","onSubmit","e","preventDefault","collection","doc","set","merge","changeChatName","value","onChange","target","AnimatePresence","exitBeforeEnter","motion","div","initial","x","animate","exit","color","fromNow","slice","delete","then","console","log","catch","error","Modal","elRef","firstRender","checkClick","current","contains","handleCloseAnimation","document","addEventListener","removeEventListener","handleKeyDown","evt","key","keyCode","useLayoutEffect","gsap","from","duration","y","to","onComplete","ReactDOM","createPortal","cloneElement","body","Chat","input","setInput","messages","setMessages","unsubscribe","onSnapshot","querySnapshot","sortedMessages","sortByCreationTime","docs","map","mess","data","setIsMessageSent","chats","sort","a","b","lastMessageRef","createRef","messagesContainerRef","isMessageSent","scrollBy","scrollHeight","isEditChatBSOpen","setIsEditChatBSOpen","IconButton","index","add","displayName","photo","actualDate","update","s","sendMessage","placeholder","disabled","SidebarChat","isActive","NewChatBS","dir","chatName","creatorName","creatorAvatar","newChat","get","Sidebar","setChats","sortedChats","sortChatsByLastEdit","openChat","find","c","isNewChatBSOpen","setIsNewChatBSOpen","searchPhrase","setSearchPhrase","signOut","variant","filter","toLowerCase","includes","handleChatClick","Imessage","window","innerWidth","setInnerWidth","onResize","Login","logo","Button","signInWithPopup","alert","message","App","querySelector","setProperty","innerHeight","onAuthStateChanged","authUser","photoURL","emiall","configureStore","reducer","userReducer","render","StrictMode","store","getElementById","module","exports"],"mappings":"mTAyBeA,EApBCC,sBACd,WAAoFC,GAAS,IAA1FC,EAAyF,EAAzFA,QAASC,EAAgF,EAAhFA,aAAcC,EAAkE,EAAlEA,YAAaC,EAAqD,EAArDA,WAAuBC,GAA8B,EAAzCC,UAAyC,EAA9BD,WAAcE,EAAgB,6FAG1F,OACE,+CAASA,GAAT,aACE,sBAAKP,IAAKA,EAAKQ,UAAS,mBAAcH,GAAa,sBAAnD,UACE,sBAAKG,UAAU,eAAf,UACE,qBAAKA,UAAU,gBAAf,SAAgCP,IAChC,cAACQ,EAAA,EAAD,CAAQC,IAAKP,EAAaK,UAAU,uBAEtC,oBAAGA,UAAU,gBAAb,UACGN,EADH,IACkBE,c,mDCLtBO,EADcC,IAASC,cATN,CACrBC,OAAQ,0CACRC,WAAY,uCACZC,UAAW,uBACXC,cAAe,mCACfC,kBAAmB,eACnBC,MAAO,8CAIcC,YACjBC,EAAOT,IAASS,OAChBC,EAAW,IAAIV,IAASS,KAAKE,mBAGpBZ,I,gBCfFa,EAAYC,YAAY,CACnCC,KAAM,OACNC,aAAc,CACZC,KAAM,MAERC,SAAU,CACRC,MAAO,SAACC,EAAOC,GACbD,EAAMH,KAAOI,EAAOC,SAEtBC,OAAQ,SAACH,GACPA,EAAMH,KAAO,S,EAKcJ,EAAUW,QAA5BL,E,EAAAA,MAAOI,E,EAAAA,OAETE,EAAa,SAACL,GAAD,OAAWA,EAAMH,KAAKA,MAEjCJ,IAAf,QCnBaa,EAAYZ,YAAY,CACnCC,KAAM,OACNC,aAAc,CACZW,MAAM,EACNZ,KAAM,GACNa,GAAI,OACJrC,aAAc,GACdsC,SAAU,IAEZX,SAAU,CACRY,eAAgB,SAACV,EAAOC,GACtBD,EAAMO,MAAO,EADoB,MAE8CN,EAAOC,QAA9EP,EAFyB,EAEzBA,KAAMa,EAFmB,EAEnBA,GAAIrC,EAFe,EAEfA,aAAcwC,EAFC,EAEDA,WAAYC,EAFX,EAEWA,SAAUC,EAFrB,EAEqBA,SAAUC,EAF/B,EAE+BA,WAChEd,EAAML,KAAOA,EACbK,EAAMQ,GAAKA,EACXR,EAAM7B,aAAeA,EACrB6B,EAAMW,WAAaA,EACnBX,EAAMY,SAAWA,EACjBZ,EAAMa,SAAWA,EACjBb,EAAMc,WAAaA,GAGrBC,iBAAkB,SAACf,EAAOC,GAGxBD,EAAMS,SAAN,2BAAsBT,GAAUC,EAAOC,SACvCF,EAAMY,SAAWX,EAAOC,QAAQU,SAChCZ,EAAMa,SAAWZ,EAAOC,QAAQW,SAChCb,EAAMW,WAAaV,EAAOC,QAAQS,WAClCX,EAAML,KAAOM,EAAOC,QAAQP,KAC5BK,EAAMc,WAAab,EAAOC,QAAQY,WAClCd,EAAMQ,GAAKP,EAAOC,QAAQM,IAE5BQ,gBAAiB,SAAChB,GAEhBA,EAAMO,MAAO,M,EAKkDD,EAAUF,QAAhEM,E,EAAAA,eAAgBK,E,EAAAA,iBAAkBC,E,EAAAA,gBAEpCC,EAAa,SAACjB,GAAD,OAAWA,EAAMkB,MAE5BZ,IAAf,Q,iBCvCaa,EAA6B,SAACC,GACzC,MAAoB,kBAATA,EANqB,SAACA,GAEjC,OADmBC,IAAOD,EAAM,uBAMvBE,CAAmBF,GACjBA,aAAgBG,KAClBF,IAAOD,GAETC,IAAOD,EAAKI,WAGRC,EAA0B,SAACL,GACtC,OAAOA,EAAKM,OAAO,yB,iBCVfC,EAAe,CACnBC,gBAAiB,QACjBC,aAAc,gBACdC,SAAU,SACVC,MAAO,OACPC,QAAS,OACTC,eAAgB,SAChBC,UAAW,OACXC,WAAY,OACZC,YAAa,OACbC,OAAQ,oBACRC,QAAS,GAyBIC,EAtBKC,IAAMxE,YAAW,WAA4CC,GAAS,IAAlDsC,EAAiD,EAAjDA,KAAMkC,EAA2C,EAA3CA,YAAaC,EAA8B,EAA9BA,SAA8B,oDACnEC,iBAAO,IAEmBC,oBAAS,IAHgC,mBAG/DC,GAH+D,WAUvF,OALAC,qBAAU,WAER,OADAD,EAAmBtC,GACZ,eACN,CAACA,IAGF,qBAAKwC,MAAOpB,EAAc1D,IAAKA,EAA/B,SACE,sBAAKQ,UAAWuE,IAAOC,UAAvB,UACE,qBAAKC,QAAST,EAAahE,UAAWuE,IAAOG,IAA7C,SACE,wCAEF,qBAAK1E,UAAWuE,IAAOI,QAAvB,SAAiCV,Y,iBCnC5BW,EAAa,SAACC,GACzB,OAAO,qBAAK7E,UAAU,mDAAf,SAAmE6E,EAAMZ,YAGrEa,EAAY,SAACD,GACxB,OAAO,qBAAK7E,UAAU,+DAAf,SAA+E6E,EAAMZ,YAGjFc,EAAkB,SAAC,GAAsC,IAApC/E,EAAmC,EAAnCA,UAAuB6E,GAAY,EAAxBG,QAAwB,wCACnE,OACE,6CAAKhF,UAAS,wDAAmDA,IAAiB6E,GAAlF,aACGA,EAAMZ,aAKAgB,EAAmB,SAAC,GAAkB,IAAbJ,EAAY,oBAChD,OACE,6CACE7E,UAAU,6GACN6E,GAFN,aAGGA,EAAMZ,aAKAiB,EAAO,SAAC,GAAmC,IAAD,IAAhCC,YAAgC,MAAzB,SAAyB,EAAZN,EAAY,wBACrD,OAAQM,GACN,IAAK,OACH,OAAO,mBAAGnF,UAAU,4BAAb,SAA0C6E,EAAMZ,WACzD,QACE,OAAO,mBAAGjE,UAAU,0BAAb,SAAwC6E,EAAMZ,aAI9CmB,EAAQ,SAAC,GAAmC,IAAD,IAAhCD,YAAgC,MAAzB,SAAyB,EAAZN,EAAY,wBACtD,OAAQM,GACN,IAAK,OACH,OAAO,mBAAGnF,UAAU,mDAAb,SAAiE6E,EAAMZ,WAEhF,QACE,OAAO,mBAAGjE,UAAU,kDAAb,SAAgE6E,EAAMZ,WAEjF,OAAO,mBAAGjE,UAAU,kDAAb,SAAgE6E,EAAMZ,Y,oBCkIhEoB,GAhKKtB,IAAMxE,YAAW,WAAwBC,GAAS,IAAD,EAA7BsC,EAA6B,EAA7BA,KAAMkC,EAAuB,EAAvBA,YACtCsB,EAAWvB,IAAMG,SACjBqB,EAAYxB,IAAMG,OAAO,MAFoC,EAIrCC,mBAAS,IAJ4B,mBAI5DqB,EAJ4D,KAInDC,EAJmD,KAM7DrE,EAAOsE,YAAY9D,GACnBa,EAAOiD,YAAYlD,GAEnBmD,EAAWC,cATkD,EAWnCzB,oBAAS,GAX0B,mBAW5D0B,EAX4D,KAWlDC,EAXkD,KAanEzB,qBAAU,WACRoB,EAAWhD,EAAKvB,QACf,IAEHmD,qBAAU,WACRyB,EAAYN,EAAQO,OAAS,KAC5B,CAACP,IAEJ,IAoBMQ,EAAWC,uBACf,SAACC,GACK,OAAJA,QAAI,IAAJA,KAAMC,UAER,CAACrE,IA7CgE,EA8DnCqC,mBAAS1B,EAAKJ,aAAejB,EAAKgF,KA9DC,mBA8D5DC,EA9D4D,UAgEnE,OACE,cAAC,EAAD,CAAavE,KAAMA,EAAMkC,YAAaA,EAAaxE,IAAK8F,EAAxD,SACE,sBAAKtF,UAAWuE,IAAOC,UAAWhF,IAAK+F,EAAvC,UACE,eAAC,EAAD,WACE,qBAAKvF,UAAU,qCAAf,SAAqDyC,EAAKvB,OAC1D,qBAAKlB,UAAU,2DAAf,SACGyC,EAAKJ,aAAejB,EAAKgF,IAAM,0CAA4C,QAI/EC,GACC,cAAC,EAAD,UACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAMlB,KAAK,OAAX,uBAEA,sBAAMmB,SAjDa,SAACC,GAC9BA,EAAEC,iBACEhB,EAAQO,QAAU,IAXD,SAACP,GAAa,IAAD,EAClC,UAAArF,EAAGsG,WAAW,gBAAd,SAAwBC,IAAIjE,EAAKV,IAAI4E,IACnC,CACEzF,KAAMsE,GAER,CAAEoB,OAAO,IAQTC,CAAerB,GACfxB,KAEA8B,GAAY,IA0CoC9F,UAAU,eAAlD,SACE,sBAAKA,UAAU,2CAAf,UACE,uBAEER,IAAKwG,EACLhG,UAAU,+FACV8G,MAAOtB,EACPR,SAAUqB,EACVU,SAAU,SAACR,GACTd,EAAWc,EAAES,OAAOF,UAGxB,cAACG,GAAA,EAAD,CAAiBC,iBAAe,EAAhC,SACGrB,EACC,cAACsB,GAAA,EAAOC,IAAR,CAEEC,QAAS,CAAEC,EAAG,SACdC,QAAS,CAAE1D,QAAS,EAAGyD,EAAG,OAC1BE,KAAM,CAAE3D,QAAS,EAAGyD,EAAG,SACvBtH,UAAU,gEALZ,+BACO6F,GAQP,wBAAQV,KAAK,SAASnF,UAAU,MAAhC,SACE,cAAC,IAAD,CAAiByH,MAAO5B,EAAW,WAAa,0BAShE,eAAC,EAAD,WACE,eAAC,EAAD,WACE,cAAC,EAAD,wBACA,cAAC,EAAD,UAAQpD,EAAKvB,UAEf,eAAC,EAAD,WACE,cAAC,EAAD,iBACA,cAAC,EAAD,UAAQuB,EAAKV,QAEf,eAAC,EAAD,WACE,cAAC,EAAD,2BACA,cAAC,EAAD,UAAQU,EAAK/C,kBAEf,eAAC,EAAD,WACE,cAAC,EAAD,yBACA,cAAC,EAAD,iBAAQ+C,QAAR,IAAQA,OAAR,EAAQA,EAAMJ,gBAEhB,eAAC,EAAD,WACE,cAAC,EAAD,uBACA,cAAC,EAAD,UAAQI,EAAKN,cAEf,eAAC,EAAD,WACE,cAAC,EAAD,gCACA,cAAC,EAAD,UAAQS,IAAOH,EAAKN,SAAU,uBAAuBuF,eAEvD,eAAC,EAAD,WACE,cAAC,EAAD,uBACA,cAAC,EAAD,UAAQjF,EAAKL,cAEf,eAAC,EAAD,WACE,cAAC,EAAD,yBACA,cAAC,EAAD,iBAAQK,QAAR,IAAQA,GAAR,UAAQA,EAAMP,kBAAd,aAAQ,EAAkByF,MAAM,EAAG,aAGtCtB,GACC,cAAC,EAAD,CACE5B,QAAS4B,EApGE,SAACE,GAAO,IAAD,EAC1B,UAAApG,EAAGsG,WAAW,gBAAd,SACIC,IAAIjE,EAAKV,IACV6F,SACAC,MAAK,WACJC,QAAQC,IAAI,kCACZpC,EAASpD,KACTyB,OAEDgE,OAAM,SAACC,GACNH,QAAQG,MAAM,iCAAkCA,OA0FT,KACnCjI,UAAS,0DAFX,SAGE,cAAC,EAAD,CAAkBA,UAAS,oBAAeqG,EAAW,eAAiB,iBAAtE,8B,iBCnFG6B,GA9EDnE,IAAMxE,YAAW,WAA4CC,GAAQ,EAAjDsC,KAAkD,IAA5CkC,EAA2C,EAA3CA,YAAaC,EAA8B,EAA9BA,SAC7CkE,GAD2E,iDACnEjE,oBAERkE,GADmBlE,mBACLA,kBAAO,IAErBmE,EAAa,SAAC9B,GAAO,IAAD,IAExB,KAAI,UAAC4B,EAAMG,eAAP,iBAAC,EAAerE,SAAS,UAAzB,aAAC,EAA4BsE,SAAShC,EAAES,SAAS,CAEnD,GAAIoB,EAAYE,QAEd,YADAF,EAAYE,SAAU,GAGxBE,MAIJnE,qBAAU,WAER,OADAoE,SAASC,iBAAiB,QAASL,GAC5B,WACLI,SAASE,oBAAoB,QAASN,MAEvC,IAEH,IAAMO,EAAgB,SAACC,IAEjB,QAASA,EACY,WAAZA,EAAIC,KAAgC,QAAZD,EAAIC,IAEZ,KAAhBD,EAAIE,UAIf/E,KAIJK,qBAAU,WAIR,OADAoE,SAASC,iBAAiB,UAAWE,GAC9B,WACLH,SAASE,oBAAoB,UAAWC,MAEzC,IAGH7E,IAAMiF,iBAAgB,WACpBC,KAAKC,KAAKf,EAAMG,QAAS,CAAEzE,QAAS,EAAGsF,SAAU,KACjDF,KAAKC,KAAKf,EAAMG,QAAQrE,SAAU,CAAEmF,EAAG,OAAQD,SAAU,OACxD,IAGH,IAAMX,EAAuB,WAC3BS,KAAKI,GAAGlB,EAAMG,QAAS,CAAEnF,gBAAiB,cAAegG,SAAU,EAAGG,WAAYtF,IAClFiF,KAAKI,GAAGlB,EAAMG,QAAQrE,SAAU,CAAEmF,EAAG,OAAQD,SAAU,MAGrCjF,iBAAO,IAE3B,OAAOqF,IAASC,aACd,qBACEhK,IAAK2I,EACLnI,UAAU,kFAFZ,SAIE,mCAAG+D,IAAM0F,aAAaxF,EAAU,CAAED,YAAawE,QAUjDC,SAASiB,S,SCwIEC,OAjMf,WAEE,IAAMvI,EAAOsE,YAAY9D,GACnBa,EAAOiD,YAAYlD,GACnBmD,EAAWC,cAJH,EAMYzB,mBAAS,IANrB,mBAMPyF,EANO,KAMAC,EANA,OASkB1F,mBAAS,IAT3B,mBASP2F,EATO,KASGC,EATH,KAqDd1F,qBAAU,WACR,IACe,IADX2F,EAAc,KACdvH,EAAKX,OACPkI,EAAW,UAAG7J,EACXsG,WAAW,gBADH,iBAAG,EAEVC,IAAIjE,EAAKV,WAFF,aAAG,EAGV0E,WAAW,YACZwD,YAAW,SAACC,GAAmB,IAAD,EACvBC,EAAiBC,EAAkB,UACvCF,EAAcG,YADyB,aACvC,EAAoBC,KAAI,SAACC,GAAD,mBAAC,eACpBA,EAAKC,QADc,IAEtBzI,GAAIwI,EAAKxI,GACTrC,aAAcgD,EAA2B6H,EAAKC,OAAO9K,oBAGzDqK,EAAYI,OAGlB,OAAO,WACD1H,EAAKX,MAAMkI,OAEhB,CAACvH,IAGJ4B,qBAAU,WAER,OADAoG,GAAiB,GACV,eACN,CAAChI,IAGJ,IAMM2H,EAAqB,SAACM,GAAD,OAAWA,EAAMC,MAAK,SAACC,EAAGC,GAAJ,OAAUjI,IAAOgI,EAAElL,cAAgBkD,IAAOiI,EAAEnL,kBAEvFoL,EAAiBC,sBACjBC,EAAuBD,sBA5Ff,EA6F4B5G,oBAAS,GA7FrC,mBA6FP8G,EA7FO,KA6FQR,EA7FR,KA+FdpG,qBAAU,WACJ2G,EAAqB1C,SACvB0C,EAAqB1C,QAAQ4C,SAAS,EAAGF,EAAqB1C,QAAQ6C,cAGpEF,IACFnD,QAAQC,IAAI,gBAAiBkD,GAC7BhC,KAAKC,KAAK4B,EAAexC,QAAS,CAChCzE,QAAS,EACTD,OAAQ,EAERuF,SAAU,QAGb,CAACW,IA7GU,MAgHkC3F,oBAAS,GAhH3C,mBAgHPiH,EAhHO,KAgHWC,EAhHX,KAkHd,OACE,sBAAKrL,UAAU,OAAf,UAEE,sBAAKA,UAAU,eAAf,UACE,cAACsL,EAAA,EAAD,CAAY7G,QAnCW,WAC3BkB,EAASpD,KACTwH,EAAY,KAiCR,SACE,cAAC,IAAD,MAEF,qBAAK/J,UAAU,oBAAf,SACE,6BAAKyC,EAAKX,KAAOW,EAAKvB,KAAO,OAG/B,oBACEuD,QAAS,WACP4G,GAAoB,IAEtBrL,UAAU,gBAJZ,wBAUF,qBAAKR,IAAKwL,EAAsBhL,UAAS,WAAMyC,EAAKX,MAAQ,cAAnB,mBAAzC,SACGgI,EAASQ,KAAI,SAACC,EAAMgB,GAAP,OACZ,8BACE,cAAC,EAAD,yBAEE1L,UAAW0K,EAAKzK,YAAcsB,EAAKgF,IACnC3G,QAAS8K,EAAK9K,SACV8K,GAJN,IAKE7K,aAAcsD,EAAwBuH,EAAK7K,cAC3CF,IAAKsL,IALAS,IAFCA,QAcb9I,EAAKX,MACJ,qBAAK9B,UAAU,cAAf,SACE,uBACEsG,SAAU,SAACC,GACL9D,EAAKX,KAhJD,SAACyE,GACnBA,EAAEC,iBACFiE,GAAiB,GAEjB,IAAK,IAAD,IACF,UAAAtK,EAAGsG,WAAW,gBAAd,mBACIC,IAAIjE,EAAKV,WADb,SAEI0E,WAAW,YACZ+E,IAAI,CACH5L,WAAYwB,EAAKqK,YACjB3L,UAAWsB,EAAKgF,IAChBzG,YAAayB,EAAKsK,MAClBjM,QAASmK,EACTlK,aAAc,IAAIoD,OAEnB+E,MAAK,WAAO,IAAD,EACJ8D,EAAa,IAAI7I,KACvB,UAAA3C,EAAGsG,WAAW,gBAAd,SACIC,IAAIjE,EAAKV,IACV6J,OAAO,CACNzJ,SAAUwJ,EACVvJ,SAAUhB,EAAKqK,YACfvJ,WAAYd,EAAKsK,QAElB7D,MAAK,SAACgE,OAGN7D,OAAM,SAACzB,GACNuB,QAAQC,IAAI,8CAA+CxB,SAGhEyB,OAAM,SAACzB,GACNuB,QAAQC,IAAI,QAASxB,MAEzB,MAAOA,GACPuB,QAAQC,IAAI,QAASxB,GAGvBsD,EAAS,IA0GgBiC,CAAYvF,IAEzBA,EAAEC,iBACFqD,EAAS,MAGb7J,UAAU,sBARZ,UASE,uBACE8G,MAAO8C,EACP7C,SAAU,SAACR,GAAD,OAAOsD,EAAStD,EAAES,OAAOF,QACnCiF,YAAY,UACZC,UAAWvJ,EAAKX,OAGlB,cAACwJ,EAAA,EAAD,CACEnG,KAAK,SACLV,QAAS,aAFX,SAKE,cAAC,IAAD,WAKP2G,GACC,cAAC,GAAD,CACEtJ,KAAMsJ,EACNpH,YAAa,WACXqH,GAAoB,IAHxB,SAME,cAAC,GAAD,CAAavJ,KAAMsJ,U,uBCzLda,OAjBf,YAA0E,IAAnD/K,EAAkD,EAAlDA,KAAMiB,EAA4C,EAA5CA,SAAUC,EAAkC,EAAlCA,SAAUF,EAAwB,EAAxBA,WAAYgK,EAAY,EAAZA,SAC3D,OACE,sBAAKlM,UAAS,sBAAiBkM,GAAY,uBAA3C,UACE,cAACjM,EAAA,EAAD,CAAQD,UAAU,sBAAsBE,IAAKgC,IAC7C,sBAAKlC,UAAU,oBAAf,UACE,sBAAKA,UAAU,sBAAf,UACE,qBAAKA,UAAU,oBAAf,SAAoCkB,IACpC,qBAAKlB,UAAU,oBAAf,SACGgD,EAAwBN,EAA2BP,SAGxD,qBAAKnC,UAAU,sBAAf,SAAsCoC,W,4DC6F/B+J,GAjGGpI,IAAMxE,YAAW,WAAwBC,GAAS,IAA9BsC,EAA6B,EAA7BA,KAAMkC,EAAuB,EAAvBA,YAAuB,EACnCG,mBAAS,IAD0B,mBAC1DqB,EAD0D,KACjDC,EADiD,OAGjCtB,oBAAS,GAHwB,mBAG1D0B,EAH0D,KAGhDC,EAHgD,KAK3D1E,EAAOsE,YAAY9D,GACnB+D,EAAWC,cA4CXI,EAAWC,uBAAY,SAACC,GACxB,OAAJA,QAAI,IAAJA,KAAMC,QACN2B,QAAQsE,IAAIlG,KACX,IAEH,OACE,cAAC,EAAD,CAAapE,KAAMA,EAAMkC,YAAaA,EAAaxE,IAAKA,EAAxD,SACE,sBAAKQ,UAAWuE,KAAOC,UAAvB,UACE,cAAC,EAAD,UACE,qBAAKxE,UAAU,qCAAf,mBAGF,cAAC,EAAD,UACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAMmF,KAAK,OAAX,uBAEA,sBAAMmB,SA5BkB,SAACC,GA9BhB,IAAC8F,EA+BlB9F,EAAEC,iBACEhB,EAAQO,OAAS,GACnB+B,QAAQC,IAAI,4BAA8BvC,GAjC1B6G,EAkCL7G,EAjCbrF,EAAGsG,WAAW,SACX+E,IAAI,CACHpJ,SAAUhB,EAAKqK,YACftJ,SAAU,IAAIW,KACdZ,WAAYd,EAAKsK,MACjBhM,aAAc,IAAIoD,KAClBwJ,YAAalL,EAAKqK,YAClBc,cAAenL,EAAKsK,MACpBrJ,WAAYjB,EAAKgF,IACjBlF,KAAMmL,IAEPxE,MAAK,SAAC2E,GACL1E,QAAQC,IAAI,kBAAoByE,EAAQzK,IACxC+F,QAAQsE,IAAII,EAAQzK,IAEpByK,EAAQC,MAAM5E,MAAK,SAACnB,GAClBf,EACE1D,EAAe,yBACbF,GAAI2E,EAAI3E,IACL2E,EAAI8D,QAFK,IAGZrI,SAAUa,EAAwBN,EAA2BgE,EAAI8D,OAAOrI,WACxEzC,aAAcsD,EAAwBN,EAA2BgE,EAAI8D,OAAO9K,eAC5E8K,KAAM,eAYd/E,EAAW,IACXzB,KAEA8B,GAAY,IAoBqC9F,UAAU,eAArD,SACE,sBAAKA,UAAU,2CAAf,UACE,uBAEER,IAAKwG,EACLhG,UAAU,+FACV8G,MAAOtB,EACPuB,SAAU,SAACR,GACTd,EAAWc,EAAES,OAAOF,OAChBtB,EAAQO,QAAU,EAAGD,GAAY,GAChCA,GAAY,MAGpBD,EACC,qBAAK7F,UAAU,sDAAf,gDAIA,wBAAQmF,KAAK,SAASnF,UAAU,MAAhC,SACE,cAAC,IAAD,CAAiByH,MAAO5B,EAAW,WAAa,gCCiDrD6G,OAhIf,WACE,IAAMtL,EAAOsE,YAAY9D,GACnBa,EAAOiD,YAAYlD,GACnBmD,EAAWC,cAHA,GAIFF,aAAY,SAACmG,GAAD,OAAOA,EAAEpJ,KAAKV,MAEfoC,mBAAS,KANlB,mBAMVuG,EANU,KAMHiC,EANG,KASjBtI,qBAAU,WACR,IAAM2F,EAAc7J,EAAGsG,WAAW,SAASwD,YAAW,SAACC,GAAmB,IAAD,EACjE0C,EAAcC,EAAmB,UACrC3C,EAAcG,YADuB,aACrC,EAAoBC,KAAI,SAAC5D,GAAD,yBAAC,aACvB3E,GAAI2E,EAAI3E,IACL2E,EAAI8D,QAFe,OAGtBtJ,KAAMwF,EAAI8D,OAAOtJ,KACjBgB,WAAYwE,EAAI8D,OAAOtI,WACvBE,SAAUsE,EAAI8D,OAAOpI,SACrB1C,aAAcgH,EAAI8D,OAAO9K,aACzByC,SAAUuE,EAAI8D,OAAOrI,SACjBO,EAA2BgE,EAAI8D,OAAOrI,UACtCO,EAA2BgE,EAAI8D,OAAO9K,eATpB,sBAUhBgH,EAAI8D,OAAOtJ,MAVK,sBAWhBwF,EAAI8D,QAXY,QAc1BmC,EAASC,MAGX,OAAO,WACL5C,OAED,IAEH3F,qBAAU,WACR,IAAMyI,EAAWpC,EAAMqC,MAAK,SAACC,GAAD,OAAOA,EAAEjL,KAAOU,EAAKV,MACjD,GAAI+K,EAAU,CAAC,IACL3K,EAAyD2K,EAAzD3K,SAAUC,EAA+C0K,EAA/C1K,SAAUF,EAAqC4K,EAArC5K,WAAYhB,EAAyB4L,EAAzB5L,KAAMmB,EAAmByK,EAAnBzK,WAAYN,EAAO+K,EAAP/K,GAC1D4D,EACErD,EAAiB,CACfH,SAAUa,EAAwBN,EAA2BP,IAC7DC,WACAF,aACAhB,OACAmB,aACAN,WAIL,CAAC2I,IAEJ,IAYMmC,EAAsB,SAACnC,GAAD,OAAWA,EAAMC,MAAK,SAACC,EAAGC,GAAJ,OAAUjI,IAAOiI,EAAE1I,UAAYS,IAAOgI,EAAEzI,cA/DzE,EAkE6BgC,oBAAS,GAlEtC,mBAkEV8I,EAlEU,KAkEOC,EAlEP,OAoEuB/I,mBAAS,IApEhC,mBAoEVgJ,EApEU,KAoEIC,EApEJ,KAsEjB,OACE,sBAAKpN,UAAU,UAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,cAACC,EAAA,EAAD,CAAQwE,QAAS,kBAAM5D,EAAKwM,WAAWnN,IAAKkB,EAAKsK,MAAO1L,UAAU,oBAClE,sBAAKA,UAAU,kBAAf,UACE,cAAC,KAAD,IACA,uBAAO+L,YAAY,SAAShF,SAAU,SAACR,GAAD,OAAO6G,EAAgB7G,EAAES,OAAOF,aAExE,cAACwE,EAAA,EAAD,CAAYgC,QAAQ,WAAWtN,UAAU,yBAAzC,SACE,cAAC,KAAD,CACEyE,QAAS,WACPyI,GAAmB,WAM3B,qBAAKlN,UAAU,iBAAf,SACG0K,EACE6C,QAAO,SAAC9K,GACP,MAAqB,KAAjB0K,KACK1K,EAAKvB,KAAKsM,cAAcC,SAASN,EAAaK,kBAGxDlD,KAAI,SAAC5D,EAAK6E,GAAN,OACH,qBAEE9G,QAAS,YA9CG,SAACiC,GACvBf,EACE1D,EAAe,2BACVyE,GADS,IAEZvE,SAAUa,EAAwBN,EAA2BgE,EAAIvE,WACjEzC,aAAcsD,EAAwBN,EAA2BgE,EAAIhH,eACrE8K,KAAM,SAyCEkD,CAAgBhH,IAHpB,SAKE,cAAC,GAAD,CACExF,KAAMwF,EAAIxF,KACViB,SAAUa,EAAwB0D,EAAIvE,UACtCC,SAAUsE,EAAItE,SACdF,WAAYwE,EAAIxE,WAChBgK,SAAUxF,EAAI3E,KAAOU,EAAKV,MATvB2E,EAAI3E,SAchBkL,GACC,cAAC,GAAD,CACEnL,KAAMmL,EACNjJ,YAAa,WACXkJ,GAAmB,IAHvB,SAKE,cAAC,GAAD,CACEpL,KAAMmL,EACNjJ,YAAa,WACXkJ,GAAmB,YCnGlBS,OA/Bf,WAAqB,IAAD,EACkBxJ,mBAASyJ,OAAOC,YADlC,mBACXA,EADW,KACCC,EADD,KAIZrL,GADOiD,YAAY9D,GACZ8D,YAAYlD,IAYzB,OAVA6B,qBAAU,WACR,IAAM0J,EAAW,SAACxH,GAChBuH,EAAcF,OAAOC,aAGvB,OADAD,OAAOlF,iBAAiB,SAAUqF,GAC3B,WACLH,OAAOjF,oBAAoB,SAAUoF,MAEtC,IAGD,sBAAK/N,UAAU,WAAf,UACG6N,GAAc,KACb,qCACG,IACD,cAAC,GAAD,IACA,cAAC,GAAD,OAIHA,EAAa,MAASpL,EAAKX,KAAqB,cAAC,GAAD,IAAd,cAAC,GAAD,SClC1B,I,OAAA,IAA0B,2C,UC0B1BkM,GAlBD,WAOZ,OACE,sBAAKhO,UAAU,QAAf,UACE,qBAAKA,UAAU,cAAf,SACE,qBAAKE,IAAK+N,OAEZ,0CACA,cAACC,GAAA,EAAD,CAAQzJ,QAZG,WACb5D,EAAKsN,gBAAgBrN,GAAUkH,OAAM,SAACC,GACpCmG,MAAMnG,EAAMoG,aAUZ,yB,OCyBSC,OAtCf,WACE,IAAMlN,EAAOsE,YAAY9D,GACnB+D,EAAWC,cAEXmI,EAAW,WACftF,SAAS8F,cAAc,SAASjK,MAAMkK,YAAY,OAAQZ,OAAOa,YAAc,IAAM,OA8BvF,OA3BApK,qBAAU,WAIR,OAHAuJ,OAAOlF,iBAAiB,SAAUqF,GAClCA,IAEO,WACLH,OAAOjF,oBAAoB,SAAUoF,MAEtC,IAEH1J,qBAAU,WACRxD,EAAK6N,oBAAmB,SAACC,GAGrBhJ,EAFEgJ,EAGArN,EAAM,CACJ8E,IAAKuI,EAASvI,IACdsF,MAAOiD,EAASC,SAChBC,OAAQF,EAASE,OACjBpD,YAAakD,EAASlD,cAKjB/J,UAGZ,IACI,qBAAK1B,UAAU,MAAf,SAAsBoB,EAAO,cAAC,GAAD,IAAe,cAAC,GAAD,OCvCtC0N,eAAe,CAC5BC,QAAS,CACP3N,KAAM4N,EACNvM,KAAMA,KCAV8G,IAAS0F,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUC,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJ1G,SAAS2G,eAAe,U,mBCZ1BC,EAAOC,QAAU,CAAC,UAAY,+BAA+B,IAAM,yBAAyB,QAAU,+B,mBCAtGD,EAAOC,QAAU,CAAC,UAAY,8BAA8B,QAAU,4BAA4B,eAAiB,qC,mBCAnHD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,QAAU,2BAA2B,eAAiB,oC","file":"static/js/main.4fe7da1f.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Message.css\";\nimport { Avatar } from \"@material-ui/core\";\nimport { forwardRef } from \"react\";\n\nconst Message = forwardRef(\n  ({ content, creationTime, authorPhoto, authorName, authorUid, incomming, ...rest }, ref) => {\n    //const messageRef = forwardRef();\n\n    return (\n      <div {...rest}>\n        <div ref={ref} className={`message ${!incomming && \"message--incomming\"}`}>\n          <div className=\"message__top\">\n            <div className=\"message__text\">{content}</div>\n            <Avatar src={authorPhoto} className=\"message__avatar\" />\n          </div>\n          <p className=\"message__data\">\n            {creationTime} {authorName}\n          </p>\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default Message;\n","import firebase from \"firebase\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCcF5qvHgJJSddX9b1iV-J-vsnuFkc8YhQ\",\n  authDomain: \"imessage-clone-60028.firebaseapp.com\",\n  projectId: \"imessage-clone-60028\",\n  storageBucket: \"imessage-clone-60028.appspot.com\",\n  messagingSenderId: \"857061839877\",\n  appId: \"1:857061839877:web:9e643870c4d96895a3f86c\",\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nexport { auth, provider };\nexport default db;\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    user: null,\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n    logout: (state) => {\r\n      state.user = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout } = userSlice.actions;\r\n\r\nexport const selectUser = (state) => state.user.user;\r\n\r\nexport default userSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const chatSlice = createSlice({\r\n  name: \"chat\",\r\n  initialState: {\r\n    open: false,\r\n    name: \"\",\r\n    id: \"NOPE\",\r\n    creationTime: \"\",\r\n    testData: {},\r\n  },\r\n  reducers: {\r\n    openChatAction: (state, action) => {\r\n      state.open = true;\r\n      const { name, id, creationTime, lastAvatar, lastEdit, lastName, creatorUid } = action.payload;\r\n      state.name = name;\r\n      state.id = id;\r\n      state.creationTime = creationTime;\r\n      state.lastAvatar = lastAvatar;\r\n      state.lastEdit = lastEdit;\r\n      state.lastName = lastName;\r\n      state.creatorUid = creatorUid;\r\n      //state.data = {...action.payload.data, action.payload.data};\r\n    },\r\n    updateChatAction: (state, action) => {\r\n      //console.dir({ ...state });\r\n      //console.dir({ ...action.payload });\r\n      state.testData = { ...state, ...action.payload };\r\n      state.lastEdit = action.payload.lastEdit;\r\n      state.lastName = action.payload.lastName;\r\n      state.lastAvatar = action.payload.lastAvatar;\r\n      state.name = action.payload.name;\r\n      state.creatorUid = action.payload.creatorUid;\r\n      state.id = action.payload.id;\r\n    },\r\n    closeChatAction: (state) => {\r\n      //state = {};\r\n      state.open = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { openChatAction, updateChatAction, closeChatAction } = chatSlice.actions;\r\n\r\nexport const selectChat = (state) => state.chat;\r\n\r\nexport default chatSlice.reducer;\r\n","import moment from \"moment\";\n\nexport const handlePLDateString = (date) => {\n  const ParsedDate = moment(date, \"DD.MM.YYYY HH.mm.ss\");\n  return ParsedDate;\n};\n\nexport const transformUnknownDateFormat = (date) => {\n  if (typeof date === \"string\") {\n    return handlePLDateString(date);\n  } else if (date instanceof Date) {\n    return moment(date);\n  }\n  return moment(date.toDate());\n};\n\nexport const transformMomentToString = (date) => {\n  return date.format(\"DD/MM/YYYY, HH:mm:ss\");\n};\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\nimport styles from \"./BottomSheet.module.css\";\n\nimport { gsap } from \"gsap\";\n\nconst defaultStyle = {\n  backgroundColor: \"white\",\n  borderRadius: \"14px 14px 0 0\",\n  overflow: \"hidden\",\n  width: \"96vw\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  marginTop: \"30px\",\n  marginLeft: \"auto\",\n  marginRight: \"auto\",\n  height: \"calc(100% - 30px)\",\n  opacity: 1,\n};\n\nconst BottomSheet = React.forwardRef(({ open, handleClose, children, ...props }, ref) => {\n  const childrenRef = useRef([]);\n\n  const [bottomSheetOpen, setBottomSheetOpen] = useState(false);\n\n  useEffect(() => {\n    setBottomSheetOpen(open);\n    return () => {};\n  }, [open]);\n\n  return (\n    <div style={defaultStyle} ref={ref}>\n      <div className={styles.Container}>\n        <div onClick={handleClose} className={styles.Top}>\n          <h4>Done</h4>\n        </div>\n        <div className={styles.Content}>{children}</div>\n      </div>\n    </div>\n  );\n});\n\nexport default BottomSheet;\n","import React from \"react\";\n\nexport const MenuHeader = (props) => {\n  return <div className=\"rounded-[14px] sm:w-[640px] mt-4 my-0 p-4 w-full\">{props.children}</div>;\n};\n\nexport const MenuGroup = (props) => {\n  return <div className=\"rounded-[14px] bg-imessage-gray sm:w-[640px] mt-4 p-4 w-full\">{props.children}</div>;\n};\n\nexport const MenuGroupButton = ({ className, disable, ...props }) => {\n  return (\n    <div className={`rounded-[14px] bg-imessage-gray mt-4 p-4 px-8 ${className}`} {...props}>\n      {props.children}\n    </div>\n  );\n};\n\nexport const MenuGroupElement = ({ ...props }) => {\n  return (\n    <div\n      className=\"flex items-center justify-between w-full py-2 border-b border-gray-300 last:pb-0 first:pt-0 last:border-0\"\n      {...props}>\n      {props.children}\n    </div>\n  );\n};\n\nexport const Left = ({ type = \"normal\", ...props }) => {\n  switch (type) {\n    case \"edit\":\n      return <p className=\"font-normal text-gray-700\">{props.children}</p>;\n    default:\n      return <p className=\"font-bold text-gray-700\">{props.children}</p>;\n  }\n};\n\nexport const Right = ({ type = \"normal\", ...props }) => {\n  switch (type) {\n    case \"edit\":\n      return <p className=\"flex-grow pl-4 text-base text-gray-600 break-all\">{props.children}</p>;\n\n    default:\n      return <p className=\"pl-4 text-sm text-right text-gray-600 break-all\">{props.children}</p>;\n  }\n  return <p className=\"pl-4 text-sm text-right text-gray-600 break-all\">{props.children}</p>;\n};\n\nexport const Edit = () => {\n  const Left = (props) => {\n    return <p className=\"font-normal text-gray-700\">{props.children}</p>;\n  };\n\n  //   return <p className=\"font-bold text-gray-700\">{props.children}</p>;\n};\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport BottomSheet from \"./BottomSheet\";\nimport db from \"../Firebase\";\nimport SendRoundedIcon from \"@material-ui/icons/SendRounded\";\nimport styles from \"./EditChatBS.module.css\";\nimport { MenuGroup, MenuGroupButton, MenuGroupElement, Left, Right, MenuHeader } from \"./BottomSheetMenu\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectUser } from \"../features/userSlice\";\nimport { selectChat, closeChatAction } from \"../features/chatSlice\";\n\nimport moment from \"moment\";\nimport gsap from \"gsap/gsap-core\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\nconst ChatDetails = React.forwardRef(({ open, handleClose }, ref) => {\n  const innerRef = React.useRef();\n  const deeperRef = React.useRef(null);\n\n  const [newName, setNewName] = useState(\"\");\n\n  const user = useSelector(selectUser);\n  const chat = useSelector(selectChat);\n\n  const dispatch = useDispatch();\n\n  const [tooShort, setTooShort] = useState(true);\n\n  useEffect(() => {\n    setNewName(chat.name);\n  }, []);\n\n  useEffect(() => {\n    setTooShort(newName.length < 4);\n  }, [newName]);\n\n  const changeChatName = (newName) => {\n    db.collection(\"chats\")?.doc(chat.id).set(\n      {\n        name: newName,\n      },\n      { merge: true }\n    );\n  };\n\n  const handleChangeNameSubmit = (e) => {\n    e.preventDefault();\n    if (newName.length >= 4) {\n      //console.log(\"handling change on submit: \" + newName);\n      changeChatName(newName);\n      handleClose();\n    } else {\n      setTooShort(false);\n    }\n  };\n\n  const inputRef = useCallback(\n    (node) => {\n      node?.focus();\n    },\n    [open]\n  );\n\n  const handleDelete = (e) => {\n    db.collection(\"chats\")\n      ?.doc(chat.id)\n      .delete()\n      .then(() => {\n        console.log(\"Document successfully deleted!\");\n        dispatch(closeChatAction());\n        handleClose();\n      })\n      .catch((error) => {\n        console.error(\"Error removing document :( ): \", error);\n      });\n  };\n\n  const [isMyChat, setIsMyChat] = useState(chat.creatorUid === user.uid);\n\n  return (\n    <BottomSheet open={open} handleClose={handleClose} ref={innerRef}>\n      <div className={styles.Container} ref={deeperRef}>\n        <MenuHeader>\n          <div className=\"text-xl font-extrabold text-center\">{chat.name}</div>\n          <div className=\"text-xs font-light text-center text-imessage-dark-gray-2\">\n            {chat.creatorUid === user.uid ? \"You've created this chat. You can edit.\" : \"\"}\n          </div>\n        </MenuHeader>\n\n        {isMyChat && (\n          <MenuGroup>\n            <MenuGroupElement>\n              <Left type=\"edit\">Chat Name</Left>\n\n              <form onSubmit={handleChangeNameSubmit} className=\"flex-1 ml-10\">\n                <div className=\"flex items-center justify-between w-full\">\n                  <input\n                    //autoFocus\n                    ref={inputRef}\n                    className=\"flex-grow bg-transparent border-0 border-transparent border-black focus-visible:outline-none\"\n                    value={newName}\n                    disable={!isMyChat}\n                    onChange={(e) => {\n                      setNewName(e.target.value);\n                    }}\n                  />\n                  <AnimatePresence exitBeforeEnter>\n                    {tooShort ? (\n                      <motion.div\n                        key={tooShort}\n                        initial={{ x: \"200px\" }}\n                        animate={{ opacity: 1, x: \"0px\" }}\n                        exit={{ opacity: 0, x: \"200px\" }}\n                        className=\"flex-shrink-0 text-xs text-red-600 opacity-0 justify-self-end\">\n                        Name is too short.\n                      </motion.div>\n                    ) : (\n                      <button type=\"submit\" className=\"p-0\">\n                        <SendRoundedIcon color={tooShort ? \"disabled\" : \"primary\"} />\n                      </button>\n                    )}\n                  </AnimatePresence>\n                </div>\n              </form>\n            </MenuGroupElement>\n          </MenuGroup>\n        )}\n        <MenuGroup>\n          <MenuGroupElement>\n            <Left>Chat Name</Left>\n            <Right>{chat.name}</Right>\n          </MenuGroupElement>\n          <MenuGroupElement>\n            <Left>ID</Left>\n            <Right>{chat.id}</Right>\n          </MenuGroupElement>\n          <MenuGroupElement>\n            <Left>creationTime</Left>\n            <Right>{chat.creationTime}</Right>\n          </MenuGroupElement>\n          <MenuGroupElement>\n            <Left>creatorUid</Left>\n            <Right>{chat?.creatorUid}</Right>\n          </MenuGroupElement>\n          <MenuGroupElement>\n            <Left>lastEdit</Left>\n            <Right>{chat.lastEdit}</Right>\n          </MenuGroupElement>\n          <MenuGroupElement>\n            <Left>lastEdit Relative</Left>\n            <Right>{moment(chat.lastEdit, \"DD/MM/YYYY, h:mm:ss\").fromNow()}</Right>\n          </MenuGroupElement>\n          <MenuGroupElement>\n            <Left>lastName</Left>\n            <Right>{chat.lastName}</Right>\n          </MenuGroupElement>\n          <MenuGroupElement>\n            <Left>lastAvatar</Left>\n            <Right>{chat?.lastAvatar?.slice(0, 150)}</Right>\n          </MenuGroupElement>\n        </MenuGroup>\n        {isMyChat && (\n          <MenuGroupButton\n            onClick={isMyChat ? handleDelete : null}\n            className={`transition-all duration-150 hover:bg-imessage-dark-gray`}>\n            <MenuGroupElement className={`font-bold ${isMyChat ? \"text-red-600\" : \"text-gray-400\"}`}>\n              Delete\n            </MenuGroupElement>\n          </MenuGroupButton>\n        )}\n      </div>\n    </BottomSheet>\n  );\n});\n\nexport default ChatDetails;\n","import gsap from \"gsap/gsap-core\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst Modal = React.forwardRef(({ open, handleClose, children, ...props }, ref) => {\n  const elRef = useRef();\n  const propsChildrenRef = useRef();\n  const firstRender = useRef(true);\n\n  const checkClick = (e) => {\n    //if (childrenRef.current[0]?.contains(e.target)) {\n    if (!elRef.current?.children[0]?.contains(e.target)) {\n      //outside modal click\n      if (firstRender.current) {\n        firstRender.current = false;\n        return;\n      }\n      handleCloseAnimation();\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"click\", checkClick);\n    return () => {\n      document.removeEventListener(\"click\", checkClick);\n    };\n  }, []);\n\n  const handleKeyDown = (evt) => {\n    var isEscape = false;\n    if (\"key\" in evt) {\n      isEscape = evt.key === \"Escape\" || evt.key === \"Esc\";\n    } else {\n      isEscape = evt.keyCode === 27;\n    }\n    if (isEscape) {\n      //console.log(\"ESC PRESSED. key=\" + evt.key + \" keyCode=\" + evt.keyCode);\n      handleClose();\n    }\n  };\n\n  useEffect(() => {\n    //document.body.appendChild(elRef.current);\n    //console.dir(elRef.current);\n    document.addEventListener(\"keydown\", handleKeyDown);\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, []);\n\n  ///animacje\n  React.useLayoutEffect(() => {\n    gsap.from(elRef.current, { opacity: 0, duration: 0.3 });\n    gsap.from(elRef.current.children, { y: \"100%\", duration: 0.6 });\n  }, []);\n\n  //animacja out - nadpisuje funkcje wychodzenia i dodaje on complete\n  const handleCloseAnimation = () => {\n    gsap.to(elRef.current, { backgroundColor: \"transparent\", duration: 1, onComplete: handleClose });\n    gsap.to(elRef.current.children, { y: \"100%\", duration: 0.6 });\n  };\n\n  const childrenRef = useRef([]);\n\n  return ReactDOM.createPortal(\n    <div\n      ref={elRef}\n      className=\"absolute top-0 left-0 z-50 w-full h-full overflow-hidden bg-black bg-opacity-50\">\n      {/* props */}\n      <>{React.cloneElement(children, { handleClose: handleCloseAnimation })}</>\n      {/* {children} */}\n      {/* <>\n        {React.Children.map(children, (child, index) =>\n          React.cloneElement(child, {\n            ref: (ref) => (childrenRef.current[index] = ref),\n          })\n        )}\n      </> */}\n    </div>,\n    document.body\n  );\n});\nexport default Modal;\n\n//absolute top-0 left-0 z-50 flex items-center justify-center bg-green-300 w-96 h-96\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport \"./Chat.css\";\nimport Message from \"./Message\";\nimport SendRoundedIcon from \"@material-ui/icons/SendRounded\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport db from \"./Firebase\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectUser } from \"./features/userSlice\";\nimport { selectChat, openChatAction, updateChatAction, closeChatAction } from \"./features/chatSlice\";\nimport moment from \"moment\";\nimport { transformMomentToString, transformUnknownDateFormat } from \"./utils\";\nimport { createRef } from \"react\";\n\nimport ChatDetails from \"./BottomSheet/ChatDetailsBS\";\n\n//animacja nowych wiadomości\nimport { Flipper, Flipped } from \"react-flip-toolkit\";\nimport Modal from \"./BottomSheet/Modal\";\nimport gsap from \"gsap\";\n\nfunction Chat() {\n  //redux\n  const user = useSelector(selectUser);\n  const chat = useSelector(selectChat);\n  const dispatch = useDispatch();\n\n  const [input, setInput] = useState(\"\");\n\n  //messages state\n  const [messages, setMessages] = useState([]);\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n    setIsMessageSent(true);\n\n    try {\n      db.collection(\"chats\")\n        ?.doc(chat.id)\n        ?.collection(\"messages\")\n        .add({\n          authorName: user.displayName,\n          authorUid: user.uid,\n          authorPhoto: user.photo,\n          content: input,\n          creationTime: new Date(),\n        })\n        .then(() => {\n          const actualDate = new Date();\n          db.collection(\"chats\")\n            ?.doc(chat.id)\n            .update({\n              lastEdit: actualDate,\n              lastName: user.displayName,\n              lastAvatar: user.photo,\n            })\n            .then((s) => {\n              //console.log(\"edytowalem info w chatcie\");\n            })\n            .catch((e) => {\n              console.log(\"error przy edycji chatu (zmiana ostatnich) \", e);\n            });\n        })\n        .catch((e) => {\n          console.log(\"ERROR\", e);\n        });\n    } catch (e) {\n      console.log(\"ERROR\", e);\n    }\n\n    setInput(\"\");\n  };\n\n  //update obiektu chat\n  useEffect(() => {\n    let unsubscribe = null;\n    if (chat.open) {\n      unsubscribe = db\n        .collection(\"chats\")\n        ?.doc(chat.id)\n        ?.collection(\"messages\")\n        .onSnapshot((querySnapshot) => {\n          const sortedMessages = sortByCreationTime(\n            querySnapshot.docs?.map((mess) => ({\n              ...mess.data(),\n              id: mess.id,\n              creationTime: transformUnknownDateFormat(mess.data().creationTime),\n            }))\n          );\n          setMessages(sortedMessages);\n        });\n    }\n    return () => {\n      if (chat.open) unsubscribe();\n    };\n  }, [chat]);\n\n  //reset when changing chat\n  useEffect(() => {\n    setIsMessageSent(false);\n    return () => {};\n  }, [chat]);\n\n  //close chat handling\n  const handleCloseChatClick = () => {\n    dispatch(closeChatAction());\n    setMessages([]);\n  };\n\n  //sorting using array.sort to compare dates in moment format\n  const sortByCreationTime = (chats) => chats.sort((a, b) => moment(a.creationTime) - moment(b.creationTime));\n\n  const lastMessageRef = createRef();\n  const messagesContainerRef = createRef();\n  const [isMessageSent, setIsMessageSent] = useState(false);\n\n  useEffect(() => {\n    if (messagesContainerRef.current) {\n      messagesContainerRef.current.scrollBy(0, messagesContainerRef.current.scrollHeight);\n    }\n\n    if (isMessageSent) {\n      console.log(\"isMessageSent\", isMessageSent);\n      gsap.from(lastMessageRef.current, {\n        opacity: 0,\n        height: 0,\n        //transform: \"scaleY(0)\",\n        duration: 0.5,\n      });\n    }\n  }, [messages]);\n\n  //details modal\n  const [isEditChatBSOpen, setIsEditChatBSOpen] = useState(false);\n\n  return (\n    <div className=\"chat\">\n      {/* chat header */}\n      <div className=\"chat__header\">\n        <IconButton onClick={handleCloseChatClick}>\n          <ArrowBackIosIcon />\n        </IconButton>\n        <div className=\"header__chat-name\">\n          <h4>{chat.open ? chat.name : \"\"}</h4>\n        </div>\n\n        <h4\n          onClick={() => {\n            setIsEditChatBSOpen(true);\n          }}\n          className=\"chat__details\">\n          Details\n        </h4>\n      </div>\n\n      {/* chat messages */}\n      <div ref={messagesContainerRef} className={`${!chat.open && \"bg-gray-200\"} chat__messages`}>\n        {messages.map((mess, index) => (\n          <div key={index}>\n            <Message\n              key={index}\n              incomming={mess.authorUid === user.uid}\n              content={mess.content}\n              {...mess}\n              creationTime={transformMomentToString(mess.creationTime)}\n              ref={lastMessageRef}\n            />\n          </div>\n        ))}\n      </div>\n\n      {/* chat input */}\n      {chat.open && (\n        <div className=\"chat__input\">\n          <form\n            onSubmit={(e) => {\n              if (chat.open) sendMessage(e);\n              else {\n                e.preventDefault();\n                setInput(\"\");\n              }\n            }}\n            className=\"chat__input-wrapper\">\n            <input\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              placeholder=\"Message\"\n              disabled={!chat.open ? true : false}\n            />\n            {/* <button type=\"submit\">Send</button> */}\n            <IconButton\n              type=\"submit\"\n              onClick={() => {\n                //setIsTestVisible(!isTestVisible);\n              }}>\n              <SendRoundedIcon />\n            </IconButton>\n          </form>\n        </div>\n      )}\n      {isEditChatBSOpen && (\n        <Modal\n          open={isEditChatBSOpen}\n          handleClose={() => {\n            setIsEditChatBSOpen(false);\n            // setMessages([]);\n          }}>\n          <ChatDetails open={isEditChatBSOpen} />\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nexport default Chat;\n","import React from \"react\";\nimport \"./SidebarChat.css\";\nimport { Avatar } from \"@material-ui/core\";\n\nimport { transformUnknownDateFormat, transformMomentToString } from \"./utils\";\n\nfunction SidebarChat({ name, lastEdit, lastName, lastAvatar, isActive }) {\n  return (\n    <div className={`sidebarChat ${isActive && \"sidebarChat--active\"}`}>\n      <Avatar className=\"sidebarChat__avatar\" src={lastAvatar} />\n      <div className=\"sidebarChat__info\">\n        <div className=\"sidebarChat__info-1\">\n          <div className=\"sidebarChat__name\">{name}</div>\n          <div className=\"sidebarChat__date\">\n            {transformMomentToString(transformUnknownDateFormat(lastEdit))}\n          </div>\n        </div>\n        <div className=\"sidebarChat__info-2\">{lastName}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default SidebarChat;\n","import React, { useCallback, useState } from \"react\";\nimport BottomSheet from \"./BottomSheet\";\nimport db from \"../Firebase\";\nimport styles from \"./NewChatBS.module.css\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectUser } from \"../features/userSlice\";\nimport { selectChat, openChatAction, closeChatAction, updateChatAction } from \"../features/chatSlice\";\nimport SendRoundedIcon from \"@material-ui/icons/SendRounded\";\n\nimport { MenuGroup, MenuGroupElement, Left, Right, MenuHeader, Edit } from \"./BottomSheetMenu\";\nimport { transformMomentToString, transformUnknownDateFormat } from \"../utils\";\n\nconst NewChatBS = React.forwardRef(({ open, handleClose }, ref) => {\n  const [newName, setNewName] = useState(\"\");\n\n  const [tooShort, setTooShort] = useState(true);\n\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  const addNewChat = (chatName) => {\n    db.collection(\"chats\")\n      .add({\n        lastName: user.displayName,\n        lastEdit: new Date(),\n        lastAvatar: user.photo,\n        creationTime: new Date(),\n        creatorName: user.displayName,\n        creatorAvatar: user.photo,\n        creatorUid: user.uid,\n        name: chatName,\n      })\n      .then((newChat) => {\n        console.log(\"NEW CHAT ADDED \" + newChat.id);\n        console.dir(newChat.id);\n\n        newChat.get().then((doc) => {\n          dispatch(\n            openChatAction({\n              id: doc.id,\n              ...doc.data(),\n              lastEdit: transformMomentToString(transformUnknownDateFormat(doc.data().lastEdit)),\n              creationTime: transformMomentToString(transformUnknownDateFormat(doc.data().creationTime)),\n              data: null,\n            })\n          );\n        });\n      });\n  };\n\n  const handleCreateNewChatSubmit = (e) => {\n    e.preventDefault();\n    if (newName.length > 3) {\n      console.log(\"handle change on submit: \" + newName);\n      addNewChat(newName);\n      setNewName(\"\");\n      handleClose();\n    } else {\n      setTooShort(false);\n    }\n  };\n\n  const inputRef = useCallback((node) => {\n    node?.focus();\n    console.dir(node);\n  }, []);\n\n  return (\n    <BottomSheet open={open} handleClose={handleClose} ref={ref}>\n      <div className={styles.Container}>\n        <MenuHeader>\n          <div className=\"text-xl font-extrabold text-center\">New</div>\n        </MenuHeader>\n\n        <MenuGroup>\n          <MenuGroupElement>\n            <Left type=\"edit\">Chat Name</Left>\n\n            <form onSubmit={handleCreateNewChatSubmit} className=\"flex-1 ml-10\">\n              <div className=\"flex items-center justify-between w-full\">\n                <input\n                  //autoFocus\n                  ref={inputRef}\n                  className=\"flex-grow bg-transparent border-0 border-transparent border-black focus-visible:outline-none\"\n                  value={newName}\n                  onChange={(e) => {\n                    setNewName(e.target.value);\n                    if (newName.length <= 3) setTooShort(true);\n                    else setTooShort(false);\n                  }}\n                />\n                {tooShort ? (\n                  <div className=\"flex-shrink-0 text-xs text-red-600 justify-self-end\">\n                    The name is too short. Correct it.\n                  </div>\n                ) : (\n                  <button type=\"submit\" className=\"p-0\">\n                    <SendRoundedIcon color={tooShort ? \"disabled\" : \"primary\"} />\n                  </button>\n                )}\n              </div>\n            </form>\n          </MenuGroupElement>\n        </MenuGroup>\n      </div>\n    </BottomSheet>\n  );\n});\n\nexport default NewChatBS;\n","import React, { useState, useEffect } from \"react\";\nimport \"./Sidebar.css\";\n\nimport SidebarChat from \"./SidebarChat\";\n\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport RateReviewIcon from \"@material-ui/icons/RateReview\";\nimport AddCommentIcon from \"@material-ui/icons/AddComment\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectUser } from \"./features/userSlice\";\nimport { selectChat, openChatAction, closeChatAction, updateChatAction } from \"./features/chatSlice\";\nimport db, { auth } from \"./Firebase\";\nimport NewChatBS from \"./BottomSheet/NewChatBS\";\nimport { handlePLDateString, transformUnknownDateFormat, transformMomentToString } from \"./utils\";\nimport moment from \"moment\";\nimport Modal from \"./BottomSheet/Modal\";\n\nfunction Sidebar() {\n  const user = useSelector(selectUser);\n  const chat = useSelector(selectChat);\n  const dispatch = useDispatch();\n  const chatId = useSelector((s) => s.chat.id);\n\n  const [chats, setChats] = useState([]);\n\n  //tylko po załadowaniu\n  useEffect(() => {\n    const unsubscribe = db.collection(\"chats\").onSnapshot((querySnapshot) => {\n      const sortedChats = sortChatsByLastEdit(\n        querySnapshot.docs?.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n          name: doc.data().name,\n          lastAvatar: doc.data().lastAvatar,\n          lastName: doc.data().lastName,\n          creationTime: doc.data().creationTime,\n          lastEdit: doc.data().lastEdit\n            ? transformUnknownDateFormat(doc.data().lastEdit)\n            : transformUnknownDateFormat(doc.data().creationTime),\n          name: doc.data().name,\n          data: doc.data(),\n        }))\n      );\n      setChats(sortedChats);\n      //console.log(\"Aktualnie otwarty chat to: \" + chat);\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  useEffect(() => {\n    const openChat = chats.find((c) => c.id === chat.id);\n    if (openChat) {\n      const { lastEdit, lastName, lastAvatar, name, creatorUid, id } = openChat;\n      dispatch(\n        updateChatAction({\n          lastEdit: transformMomentToString(transformUnknownDateFormat(lastEdit)),\n          lastName,\n          lastAvatar,\n          name,\n          creatorUid,\n          id,\n        })\n      );\n    }\n  }, [chats]);\n\n  const handleChatClick = (doc) => {\n    dispatch(\n      openChatAction({\n        ...doc,\n        lastEdit: transformMomentToString(transformUnknownDateFormat(doc.lastEdit)),\n        creationTime: transformMomentToString(transformUnknownDateFormat(doc.creationTime)),\n        data: null,\n      })\n    );\n  };\n\n  //sorting using array.sort to compare dates in moment format\n  const sortChatsByLastEdit = (chats) => chats.sort((a, b) => moment(b.lastEdit) - moment(a.lastEdit));\n\n  //add new chat modal\n  const [isNewChatBSOpen, setIsNewChatBSOpen] = useState(false);\n\n  const [searchPhrase, setSearchPhrase] = useState(\"\");\n\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar__header\">\n        <Avatar onClick={() => auth.signOut()} src={user.photo} className=\"sidebar__avatar\" />\n        <div className=\"sidebar__search\">\n          <SearchIcon />\n          <input placeholder=\"Search\" onChange={(e) => setSearchPhrase(e.target.value)} />\n        </div>\n        <IconButton variant=\"outlined\" className=\"sidebar__input-buttton\">\n          <AddCircleIcon\n            onClick={() => {\n              setIsNewChatBSOpen(true);\n            }}\n          />\n        </IconButton>\n      </div>\n\n      <div className=\"sidebar__chats\">\n        {chats\n          .filter((chat) => {\n            if (searchPhrase === \"\") return true;\n            else if (chat.name.toLowerCase().includes(searchPhrase.toLowerCase())) return true;\n            else return false;\n          })\n          .map((doc, index) => (\n            <div\n              key={doc.id}\n              onClick={() => {\n                handleChatClick(doc);\n              }}>\n              <SidebarChat\n                name={doc.name}\n                lastEdit={transformMomentToString(doc.lastEdit)}\n                lastName={doc.lastName}\n                lastAvatar={doc.lastAvatar}\n                isActive={doc.id === chat.id ? true : false}\n              />\n            </div>\n          ))}\n      </div>\n      {isNewChatBSOpen && (\n        <Modal\n          open={isNewChatBSOpen}\n          handleClose={() => {\n            setIsNewChatBSOpen(false);\n          }}>\n          <NewChatBS\n            open={isNewChatBSOpen}\n            handleClose={() => {\n              setIsNewChatBSOpen(false);\n            }}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import React, { useEffect, useState } from \"react\";\nimport \"./Imessage.css\";\nimport Chat from \"./Chat\";\nimport Sidebar from \"./Sidebar\";\nimport { selectUser } from \"./features/userSlice\";\nimport { useSelector } from \"react-redux\";\nimport { selectChat, openChatAction, updateChatAction, closeChatAction } from \"./features/chatSlice\";\n\nfunction Imessage() {\n  const [innerWidth, setInnerWidth] = useState(window.innerWidth);\n\n  const user = useSelector(selectUser);\n  const chat = useSelector(selectChat);\n\n  useEffect(() => {\n    const onResize = (e) => {\n      setInnerWidth(window.innerWidth);\n    };\n    window.addEventListener(\"resize\", onResize);\n    return () => {\n      window.removeEventListener(\"resize\", onResize);\n    };\n  }, []);\n\n  return (\n    <div className=\"imessage\">\n      {innerWidth >= 640 && (\n        <>\n          {\" \"}\n          <Sidebar />\n          <Chat />\n        </>\n      )}\n\n      {innerWidth < 640 && (!chat.open ? <Sidebar /> : <Chat />)}\n    </div>\n  );\n}\n\nexport default Imessage;\n","export default __webpack_public_path__ + \"static/media/imessage-logo.2ee5a3f6.png\";","import React from \"react\";\nimport \"./Login.css\";\n\nimport logo from \"./images/imessage-logo.png\";\nimport { Button } from \"@material-ui/core\";\n\nimport { auth, provider } from \"./Firebase\";\n\nconst Login = () => {\n  const signIn = () => {\n    auth.signInWithPopup(provider).catch((error) => {\n      alert(error.message);\n    });\n  };\n\n  return (\n    <div className=\"login\">\n      <div className=\"login__logo\">\n        <img src={logo}></img>\n      </div>\n      <h1>iMessage</h1>\n      <Button onClick={signIn}>Sign In</Button>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useEffect } from \"react\";\r\nimport Imessage from \"./Imessage\";\r\nimport Login from \"./Login\";\r\nimport \"./App.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectUser, login, logout } from \"./features/userSlice\";\r\nimport { auth } from \"./Firebase\";\r\n\r\nfunction App() {\r\n  const user = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n\r\n  const onResize = () => {\r\n    document.querySelector(\":root\").style.setProperty(\"--vh\", window.innerHeight / 100 + \"px\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", onResize);\r\n    onResize();\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", onResize);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((authUser) => {\r\n      if (authUser) {\r\n        //user is logged in\r\n        dispatch(\r\n          login({\r\n            uid: authUser.uid,\r\n            photo: authUser.photoURL,\r\n            emiall: authUser.emiall,\r\n            displayName: authUser.displayName,\r\n          })\r\n        );\r\n      } else {\r\n        //user is logged out\r\n        dispatch(logout());\r\n      }\r\n    });\r\n  }, []);\r\n  return <div className=\"App\">{user ? <Imessage /> : <Login />}</div>;\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport userReducer from \"../features/userSlice\";\r\nimport chat from \"../features/chatSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n    chat: chat,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport store from \"./app/store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"BottomSheet_Container__Qsc_G\",\"Top\":\"BottomSheet_Top__LR-l3\",\"Content\":\"BottomSheet_Content__1JF1q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"EditChatBS_Container__13qRe\",\"Element\":\"EditChatBS_Element__ky8qA\",\"detailsElement\":\"EditChatBS_detailsElement__3IBgm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"NewChatBS_Container__1KLSP\",\"Element\":\"NewChatBS_Element__HCqXf\",\"detailsElement\":\"NewChatBS_detailsElement__umNTZ\"};"],"sourceRoot":""}